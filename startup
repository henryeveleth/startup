#!/usr/bin/env ruby
require 'optparse'
require 'byebug'
require 'yaml'

class Startup
	def initialize(config, app)
		@@config = config

		@app = app
		@directory = @@config["apps"][app]["directory"]

		@port = port || @@config["apps"][app]["defaults"]["port"]
		@profile = profile || @@config["apps"][app]["defaults"]["profile"]
	end

	def execute(app, port, profile, services)
		if app == "apps"
			osascript <<-END
				tell application "Slack"
					activate
				end tell

				tell application "Sequel Pro"
					activate
				end tell

				tell application "Firefox"
					activate
				end tell

				tell application "Evernote"
					activate
				end tell

				tell application "Atom"
					activate
				end tell

				tell application "Microsoft Outlook"
					activate
				end tell

				tell application "Postman"
					activate
				end tell
			END
		elsif app == "all"
			startup("pinchme")
			startup("seeker")
			startup("ledger")
			startup("profiler")
		else
			git_directory, directory
			git_directory = @config["git_directory"]

			# TODO clean this up, refactor
			services = if services.any?
										services = services.map {|s| @config["aliases"]["services"][s]}
										services = services.flatten.select {|s| @config["apps"][app]["services"].include?(s) }
									else
										@config["apps"][app]["services"]
									end
			services.flatten!
			services.map! {|s| [s,@config["aliases"]["commands"][s].first]}
			services = services.to_h

			terminal_start = <<-END
				tell application "iTerm2"
					activate
					set terminal to (create window with #{if profile == 'default' then 'default profile' else 'profile "' + profile + '"' end})
				END

			# For now just close the first tab. Later, try moving it to end of tabs list.
			terminal_first_sesh = <<-END
				tell first session of first tab of terminal
					close
				end tell
			END

			services_tabs_raw = ""
			services.each do |k,v|
				command = (k == "server") ? v + " -p " + port.to_s : v

				if app == 'seekergui'
					command = "PORT=" + port.to_s + " " + v
				end

				services_tabs_raw += <<-END
					tell terminal
							set t to (create tab with default profile)
							tell first session of t
									write text "cd #{git_directory + directory}"
									write text "clear"
									write text "#{command}"

									set name to "#{app} #{k} #{port}"
							end tell
					end tell
				END
			end

			service_tabs = <<-END
				#{services_tabs_raw}
			END

			terminal_end = <<-END
				end tell
			END

			osascript (terminal_start + service_tabs + terminal_first_sesh + terminal_end)
		end
	end
end

@config = begin
	f = File.join(__dir__,"/config.yml")
	f = File.open(f)
  YAML.load(f)
rescue Errno::ENOENT
	puts "Config not provided!"
	exit
end

valid_options = @config["valid_options"]

#TODO remove this optparse now that a config is being used
options = {:services => []}
OptionParser.new do |parser|
	parser.banner = "Usage: startup <app-name> [options]"
	parser.on("-p=s","--port","Port for application.") {|port| options[:port] = port}
	parser.on("--profile=s","iTerm2 profile.") {|profile| options[:profile] = profile}
	parser.on("-s","--services s1,s2,...",Array,"Services to startup.") {|services| options[:services] += services}
end.parse!
options[:services] += ARGV[1...ARGV.length]

app = ARGV.first
puts "Please provide a better app name." unless valid_options.include? app
exit unless valid_options.include? app

def osascript(script)
  system 'osascript', *script.split(/\n/).map { |line| ['-e', line] }.flatten
end



startup(app,options[:port],options[:profile],options[:services])
