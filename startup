#!/usr/bin/env ruby
require 'optparse'
require 'byebug'
require 'yaml'

opts = {"valid_options" => ["pinchme", "seeker", "ledger", "profiler", "seekergui", "all", "apps"]}
git_directory = {"git_directory" => "~/GIT/"}
apps = {"pinchme" => {"directory" => "PinchMe", "defaults" => {"port" => 3000, "profile" => "default"}, "services" => ["server", "console"] },
 				"seeker" => {"directory" => "Seeker", "defaults" => {"port" => 3003, "profile" => "default"}, "services" => ["server", "console", "kinesis", "elasticsearch", "kibana", "seekergui"] },
 				"seekergui" => {"directory" => "SeekerGUI", "defaults" => {"port" => 7777, "profile" => "default"}, "services" => ["npm"] },
 				"ledger" => {"directory" => "Ledger", "defaults" => {"port" => 3002, "profile" => "default"}, "services" => ["server", "console"] },
 				"profiler" => {"directory" => "Profiler", "defaults" => {"port" => 3001, "profile" => "default"}, "services" => ["server", "console"] },
 				"opq" => {"directory" => "opq", "defaults" => {"port" => 3004, "profile" => "default"}, "services" => ["server", "console"] },
 				"apps" => {"directory" => nil, "defaults" => {"port" => nil, "profile" => nil}, "services" => ["slack", "sequel_pro", "firefox", "atom", "evernote", "postman", "outlook"] }}

aliases = {"aliases" => 
	{"apps" => {"pinchme" => ["pm"], "seekergui" => ["gui"]}, 
	"services" => {"server" => ["s"], "console" => ["c"], "elasticsearch" => ["es"], "seekergui" => ["gui"]}}}

f = File.open("./config.yml", "w")
f.write(opts.to_yaml)
f.write(git_directory.to_yaml)
f.write(apps.to_yaml)
f.write(aliases.to_yaml)

exit

options = {}
OptionParser.new do |parser|
	parser.banner = "Usage: startup <app-name> [options]"
	parser.on("-p=s","--port","Port for application.") {|port| options[:port] = port}
	parser.on("--profile=s","iTerm2 profile.") {|profile| options[:profile] = profile}
end.parse!

app_name = ARGV.first
puts "Please provide a better app name." unless valid_options.include? app_name
exit unless valid_options.include? app_name
options[:app] = app_name

def osascript(script)
  system 'osascript', *script.split(/\n/).map { |line| ['-e', line] }.flatten
end




def startup(app, port=nil, profile=nil)
	if app == "pinchme"
		port = "3000" if port.nil?
		osascript <<-END
			tell application "iTerm2"
				activate
				set terminal to (create window with default profile)
				
				# PinchMe Server
				tell first session of first tab of terminal
					write text "cd ~/GIT/PinchMe"
					write text "clear"
					write text "rails s -p #{port}"

					set name to "pm s #{port}"
				end tell
				
				# PinchMe Console
				tell terminal
						set t to (create tab with default profile)
						tell first session of t
								write text "cd ~/GIT/PinchMe"
								write text "clear"
								write text "rails c"

								set name to "pm c #{port}"
						end tell
				end tell
		 	end tell
		END
	elsif app == "seeker"
		port = "3003" if port.nil?
		osascript <<-END
			tell application "iTerm2"
				activate
				set terminal to (create window with default profile)
				
				# Seeker server
				tell first session of first tab of terminal
					write text "cd ~/GIT/Seeker"
					write text "clear"
					write text "rails s -p #{port}"

					set name to "seeker s #{port}"
				end tell

				# Seeker console
			  tell terminal
			      set t to (create tab with default profile)
			      tell first session of t
			          write text "cd ~/GIT/Seeker"
			          write text "clear"
			          write text "rails c"

			          set name to "seeker c #{port}"
			      end tell
			  end tell

				# Kinesis
			  tell terminal
			      set t to (create tab with default profile)
			      tell first session of t
			          write text "cd ~/GIT/Seeker"
			          write text "clear"
			          write text "rake kinesis:run"

			          set name to "kinesis"
			      end tell
			  end tell

				# Elasticsearch
				tell terminal
						set t to (create tab with default profile)
						tell first session of t
								write text "cd ~/GIT/Seeker"
								write text "clear"
								write text "/usr/local/elasticsearch-5.5.0/bin/elasticsearch"

								set name to "es 9200"
						end tell
				end tell

				# Kibana
				tell terminal
						set t to (create tab with default profile)
						tell first session of t
								write text "cd ~/GIT/Seeker"
								write text "clear"
								write text "/usr/local/kibana-5.4.1-darwin-x86_64/bin/kibana"

								set name to "kibana 5601"
						end tell
				end tell

				# SeekerGUI
				tell terminal
						set t to (create tab with default profile)
						tell first session of t
								write text "cd ~/GIT/SeekerGUI"
								write text "clear"
								write text "PORT=7777 npm start"

								set name to "seeker gui"
						end tell
				end tell
		 	end tell
		END
	elsif app == "ledger"
		port = "3002" if port.nil?
		osascript <<-END
			tell application "iTerm2"
				activate
				set terminal to (create window with default profile)
				
				# Ledger Server
				tell first session of first tab of terminal
					write text "cd ~/GIT/Ledger"
					write text "clear"
					write text "rails s -p #{port}"

					set name to "ledger s #{port}"
				end tell

				# Ledger Console
				tell terminal
						set t to (create tab with default profile)
						tell first session of t
								write text "cd ~/GIT/Ledger"
								write text "clear"
								write text "rails c"

								set name to "ledger c #{port}"
						end tell
				end tell
			end tell
		END
	elsif app == "profiler"
		port = "3001" if port.nil?
		osascript <<-END
			tell application "iTerm2"
				activate
				set terminal to (create window with default profile)
				
				# Profiler Server
				tell first session of first tab of terminal
					write text "cd ~/GIT/Profiler"
					write text "clear"
					write text "rails s -p #{port}"

					set name to "profiler s #{port}"
				end tell
				
				# Profiler Console
				tell terminal
						set t to (create tab with default profile)
						tell first session of t
								write text "cd ~/GIT/Profiler"
								write text "clear"
								write text "rails c"

								set name to "profiler c #{port}"
						end tell
				end tell
		 	end tell
		END
	elsif app == "apps"
		osascript <<-END
			tell application "Slack"
				activate
			end tell
			
			tell application "Sequel Pro"
				activate
			end tell
			
			tell application "Firefox"
				activate
			end tell
			
			tell application "Evernote"
				activate
			end tell
			
			tell application "Atom"
				activate
			end tell
			
			tell application "Microsoft Outlook"
				activate
			end tell
			
			tell application "Postman"
				activate
			end tell
		END
	elsif app == "all"
		startup("pinchme")
		startup("seeker")
		startup("ledger")
		startup("profiler")
	end
end

startup(options[:app],options[:port],options[:profile])
